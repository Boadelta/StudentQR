name: Build StudentQR Executables

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nuitka

      - name: Build for each OS
        run: |
          if [[ "$RUNNER_OS" == "Linux" ]]; then
            python -m nuitka --standalone --onefile --output-filename=studentQr main.py
            mkdir -p dist/linux
            mv studentQr dist/linux/
          elif [[ "$RUNNER_OS" == "Windows" ]]; then
            python -m nuitka --standalone --onefile --windows-disable-console --output-filename=studentQr.exe main.py
            mkdir dist\windows
            move studentQr.exe dist\windows\
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            python -m nuitka --standalone --onefile --output-filename=studentQr main.py
            mkdir -p dist/macos
            mv studentQr dist/macos/
          fi
        shell: bash

      - name: Upload Linux build
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v3
        with:
          name: studentQr-linux
          path: dist/linux

      - name: Upload Windows build
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v3
        with:
          name: studentQr-windows
          path: dist/windows

      - name: Upload macOS build
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v3
        with:
          name: studentQr-macos
          path: dist/macos
