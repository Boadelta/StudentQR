name: Build Executables

on:
  push:
    branches:
      - main

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install nuitka

      - name: Build executable
        run: |
          if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
            mkdir -p dist/linux
            python -m nuitka --standalone --onefile --output-filename=dist/linux/studentQr main.py
          elif [ "${{ matrix.os }}" = "macos-latest" ]; then
            mkdir -p dist/macos
            python -m nuitka --standalone --onefile --output-filename=dist/macos/studentQr main.py
          else
            mkdir -p dist/windows
            python -m nuitka --standalone --onefile --output-filename=dist/windows/studentQr.exe main.py
          fi
        shell: bash

      - name: Upload Linux artifact
        if: matrix.os == 'ubuntu-latest'
        uses: actions/upload-artifact@v4
        with:
          name: studentQr-linux
          path: dist/linux/

      - name: Upload macOS artifact
        if: matrix.os == 'macos-latest'
        uses: actions/upload-artifact@v4
        with:
          name: studentQr-macos
          path: dist/macos/

      - name: Upload Windows artifact
        if: matrix.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: studentQr-windows
          path: dist/windows/
